//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.4.0
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Page</summary>
	[PublishedContentModel("page")]
	public partial class Page : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "page";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Page(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Page, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Body Content
		///</summary>
		[ImplementPropertyType("bodyContent")]
		public IHtmlString BodyContent
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyContent"); }
		}

		///<summary>
		/// Header
		///</summary>
		[ImplementPropertyType("header")]
		public IPublishedContent Header
		{
			get { return this.GetPropertyValue<IPublishedContent>("header"); }
		}

		///<summary>
		/// Hide From Sitemap
		///</summary>
		[ImplementPropertyType("hideFromSitemap")]
		public bool HideFromSitemap
		{
			get { return this.GetPropertyValue<bool>("hideFromSitemap"); }
		}

		///<summary>
		/// Meta Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return this.GetPropertyValue<string>("metaDescription"); }
		}

		///<summary>
		/// Meta Keywords
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public string MetaKeywords
		{
			get { return this.GetPropertyValue<string>("metaKeywords"); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return this.GetPropertyValue("metaRobots"); }
		}

		///<summary>
		/// Meta Title: This field will override the title tag.
		///</summary>
		[ImplementPropertyType("metaTitle")]
		public string MetaTitle
		{
			get { return this.GetPropertyValue<string>("metaTitle"); }
		}

		///<summary>
		/// Open Graph Default image: This is the default Open Graph image associated with your media. We suggest that you use an image of at least 1200x630 pixels.
		///</summary>
		[ImplementPropertyType("openGraphDefaultImage")]
		public object OpenGraphDefaultImage
		{
			get { return this.GetPropertyValue("openGraphDefaultImage"); }
		}

		///<summary>
		/// Open Graph Description
		///</summary>
		[ImplementPropertyType("openGraphDescription")]
		public string OpenGraphDescription
		{
			get { return this.GetPropertyValue<string>("openGraphDescription"); }
		}

		///<summary>
		/// Open Graph Title
		///</summary>
		[ImplementPropertyType("openGraphTitle")]
		public string OpenGraphTitle
		{
			get { return this.GetPropertyValue<string>("openGraphTitle"); }
		}

		///<summary>
		/// Page Image: Image shown alongside content on a page.
		///</summary>
		[ImplementPropertyType("pageImage")]
		public object PageImage
		{
			get { return this.GetPropertyValue("pageImage"); }
		}

		///<summary>
		/// Page Intro
		///</summary>
		[ImplementPropertyType("pageIntro")]
		public string PageIntro
		{
			get { return this.GetPropertyValue<string>("pageIntro"); }
		}

		///<summary>
		/// Page Title
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return this.GetPropertyValue<string>("pageTitle"); }
		}

		///<summary>
		/// Umbraco Url Alias: For instance type in “terms, tcs, termsandconditions” the following URLs will be enabled: /terms.aspx /tcs.aspx / termsandconditions.aspx It’s really powerful but don’t get too carried away. Multiple URLs to the same content can seriously damage your SEO.
		///</summary>
		[ImplementPropertyType("umbracoUrlAlias")]
		public string UmbracoUrlAlias
		{
			get { return this.GetPropertyValue<string>("umbracoUrlAlias"); }
		}

		///<summary>
		/// Umbraco Url Preview
		///</summary>
		[ImplementPropertyType("umbracoUrlPreview")]
		public object UmbracoUrlPreview
		{
			get { return this.GetPropertyValue("umbracoUrlPreview"); }
		}
	}
}
