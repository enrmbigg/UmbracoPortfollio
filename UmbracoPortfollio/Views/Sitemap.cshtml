@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Root.cshtml";
    var homePage = CurrentPage.AncestorOrSelf(1);
    var title = Model.Content.GetPropertyValue("pageTitle");
}
<section>
    <div class="container">
        <div class="row">
            <div class="col-lg-push-12 text-center">
                <h2>@title</h2>
                <hr>
            </div>
            <div class="col-md-12">
                <div class="post text">
                    <article>
                        @* Render the sitemap by passing the root node to the traverse helper *@
                        <ul class="nav">
                            <li>
                                <a href="@homePage.Url">@homePage.Name</a>
                            </li>
                                @Traverse(homePage)
                            
                        </ul>
                    </article>
                </div>
            </div>
        </div>
        <hr>
    </div>
</section>

@* Helper method to travers through all descendants *@
@helper Traverse(IPublishedContent node)
{
    @* Update the level to reflect how deep you want the sitemap to go *@
    var maxLevelForSitemap = 4;
    @* Select visible children *@
    var items = node.Children
    .Where(x => x.IsVisible())
    .Where(x => !x.GetPropertyValue<bool>("hideFromSitemap"))
    .Where(x => x.Level <= maxLevelForSitemap);
    @* If any items are returned, render a list *@
    if (items.Count() > 0)
    {
        <ul>            
            @foreach (var item in items)
            {
                <li>
                    <a href="@item.Url">@item.Name</a>
                    @* Run the traverse helper again *@
                    @Traverse(item)
                </li>
            }
        </ul>
    }
}