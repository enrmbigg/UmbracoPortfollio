<?xml version="1.0" encoding="utf-8"?>
<blogPost guid="1bfa30cc-a457-48d4-aa34-46c1af424abd" id="1096" nodeName="Get Umbraco content by tag" isDoc="" updated="2016-09-08T00:36:54.3614699Z" parentGUID="445388a5-9c4b-4887-9753-f26fa5781586" nodeTypeAlias="blogPost" templateAlias="BlogPost" sortOrder="5" published="true">
  <pageIntro><![CDATA[The other day I explored how I would go about displaying the Umbraco tag data on a site, but a common scenario is what if you want to get all content that matches a given tag? Well let me show you how to implement this so the anchor tags from the last post show you post linked to that given tag.]]></pageIntro>
  <pageTitle><![CDATA[Get Umbraco Content By Tag]]></pageTitle>
  <pageImage></pageImage>
  <bodyContent><![CDATA[<p>So in the Umbraco back office, create a new partial view. Once again am going to come up with such a great original name like '<span class="keystroke">TagList'</span>. So the plan is that in this partial we’ll grab all tags associated with our content and display them on the page. This view will appear whenever visitors navigate to our template without searching for a tag or when content matching a tag search is not found.</p>
<pre>@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    var tagList = Umbraco.TagQuery.GetAllContentTags()
        .OrderBy(t =&gt; t.Text);
}

&lt;ul class="small-block-grid-1 medium-block-grid-3 large-block-grid-4"&gt;
    @foreach (var tag in tagList)
    {
        &lt;li&gt;
            &lt;a href="/tags?tag=@tag.Text"&gt;
                @tag.Text (@tag.NodeCount)
            &lt;/a&gt;
        &lt;/li&gt;
    }
&lt;/ul&gt;
</pre>
<p>Next, in the Settings view, create another partial view named <span class="keystroke">TagContentList</span>. In this partial we grab the tag parameter from the URL’s query string and search for matching content. When Umbraco finds matching content, it will display the <span class="keystroke">headline</span> property along with its create date and a link to the content.</p>
<p>The <span class="keystroke">headline</span> property is a required property I defined in a master document type to apply to all child documents. You will need to change this property name to a property that exists on your tagged documents if you haven’t implemented the <span class="keystroke">headline</span> property.</p>
<pre>@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    string tag = Request.QueryString["tag"];

    if (!tag.IsNullOrWhiteSpace())
    {
        var publishedContent = Umbraco.TagQuery.GetContentByTag(tag);

        if (publishedContent.Count() &gt; 0)
        {
            foreach (var item in publishedContent
                .OrderByDescending(i =&gt; i.CreateDate))
            {
                &lt;div class="row"&gt;
                    &lt;div class="large-8 large-centered columns"&gt;
                        &lt;section class="text-center"&gt;
                            &lt;a href="@item.Url"&gt;
                                &lt;h2&gt;
                                    @item.GetPropertyValue("Headline")
                                &lt;/h2&gt;
                            &lt;/a&gt;
                            &lt;span&gt;
                                @item.CreateDate
                            &lt;/span&gt;
                        &lt;/section&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
            }
        }
        else
        {
            &lt;div class="row"&gt;
                &lt;div class="small-12 columns"&gt;
                    &lt;p&gt;
                        There isn't any content matching that tag.
                    &lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;

            @Html.CachedPartial("TagList", Model.Content, 86400000)
        }
    }
    else
    {
    @Html.CachedPartial("TagList", Model.Content, 86400000)
    }
}
</pre>
<p>Finally, we need to add a template to display the partial views we created above. In Settings, add a new template named <span class="keystroke">Tags</span>.</p>
<pre>@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "_Layout.cshtml";
}

&lt;header&gt;
    &lt;div class="row"&gt;
        &lt;div class="large-12 columns"&gt;
            &lt;h1&gt;
                Tags
            &lt;/h1&gt;
            &lt;h3&gt;Browse content by tag&lt;/h3&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/header&gt;

&lt;div class="row"&gt;
    &lt;div class="large-12 columns"&gt;
        &lt;section class="page-container"&gt;
            @Html.Partial("TagContentList", Model.Content)
        &lt;/section&gt;
    &lt;/div&gt;
&lt;/div&gt;
</pre>]]></bodyContent>
  <header><![CDATA[[
  {
    "name": "Banner",
    "ncContentTypeAlias": "header",
    "title": "",
    "description": "",
    "link": "{\r\n  \"type\": \"content\",\r\n  \"meta\": {\r\n    \"title\": \"\",\r\n    \"newWindow\": false\r\n  },\r\n  \"typeData\": {\r\n    \"url\": \"\",\r\n    \"contentId\": null,\r\n    \"mediaId\": null\r\n  }\r\n}"
  }
]]]></header>
  <metaRobots><![CDATA[index,follow,noodp]]></metaRobots>
  <openGraphDefaultImage></openGraphDefaultImage>
  <metaKeywords><![CDATA[Umbraco, Tag, Content]]></metaKeywords>
  <metaDescription></metaDescription>
  <openGraphTitle></openGraphTitle>
  <hideFromSitemap>0</hideFromSitemap>
  <openGraphDescription></openGraphDescription>
  <metaTitle></metaTitle>
  <umbracoUrlPreview></umbracoUrlPreview>
  <umbracoUrlAlias></umbracoUrlAlias>
  <markdown></markdown>
  <tag><![CDATA[Umbraco,Tags,Content]]></tag>
  <createTime>2016-07-23T13:43:26</createTime>
</blogPost>